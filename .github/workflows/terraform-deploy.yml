name: Deploy EKS Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'eks/**'
  pull_request:
    branches:
      - main
    paths:
      - 'eks/**'
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  WORKING_DIRECTORY: './eks'

jobs:
  terraform:
    name: 'Terraform Deploy'
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'us-west-2' }}

  
   # - name: Terraform Format Check
   #   run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -no-color -out=tfplan 2>&1 | tee plan.txt
        echo "exitcode=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT
      continue-on-error: true

    - name: Comment PR with Plan
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const plan = fs.readFileSync('${{ env.WORKING_DIRECTORY }}/plan.txt', 'utf8');
          const maxLength = 65000; // GitHub comment limit
          const truncatedPlan = plan.length > maxLength ? plan.substring(0, maxLength) + '\n...\n[Output truncated]' : plan;
          
          const output = `#### Terraform Plan ðŸ“– \`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${truncatedPlan}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan

    - name: Upload Plan Artifact
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: ${{ env.WORKING_DIRECTORY }}/tfplan