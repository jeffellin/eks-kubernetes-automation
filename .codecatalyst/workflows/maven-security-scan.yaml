Name: Maven-Security-Scan
SchemaVersion: "1.0"

Triggers:
  - Type: PUSH
    Branches:
      - main

Actions:
  MavenBuildAndSecurityScan:
    Identifier: aws/build@v1
    Environment:
      Name: admin
    Inputs:
      Sources:
        - WorkflowSource
    Compute:
      Type: EC2
      Fleet: Linux.x86-64.Large
    Configuration:
      Steps:
        - Run: echo "Starting Maven build and security scan"
        
        # Install Java 17
        - Run: |
            yum update -y
            yum install -y java-17-amazon-corretto-devel
            export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto
            echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
            java -version
        
        # Change to demo directory and build Maven project
        - Run: |
            cd demo
            chmod +x mvnw
            ./mvnw clean compile test package
        
        # Install Trivy
        - Run: |
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
            trivy --version
        
        # Run Trivy filesystem scan on the built JAR and source code
        - Run: |
            cd demo
            # Scan the built JAR file for vulnerabilities
            trivy fs --format sarif --output trivy-jar-report.sarif target/
            
            # Scan source code for vulnerabilities and secrets
            trivy fs --format sarif --output trivy-source-report.sarif --scanners vuln,secret .
            
            # Check for HIGH and CRITICAL vulnerabilities in JAR
            CRITICAL_VULN=$(trivy fs --severity CRITICAL --format json target/ | jq '.Results[]?.Vulnerabilities // [] | length')
            HIGH_VULN=$(trivy fs --severity HIGH --format json target/ | jq '.Results[]?.Vulnerabilities // [] | length')
            
            echo "Critical vulnerabilities found: $CRITICAL_VULN"
            echo "High vulnerabilities found: $HIGH_VULN"
            
            # Fail build if HIGH or CRITICAL vulnerabilities found
            if [ "$CRITICAL_VULN" -gt 0 ] || [ "$HIGH_VULN" -gt 0 ]; then
              echo "‚ùå Build failed: HIGH or CRITICAL vulnerabilities found!"
              echo "üìä Vulnerability Summary:"
              trivy fs --severity HIGH,CRITICAL target/
              exit 1
            else
              echo "‚úÖ No HIGH or CRITICAL vulnerabilities found"
            fi
        
        # Upload SARIF reports as artifacts
        - Run: |
            cd demo
            echo "üìÑ SARIF reports generated:"
            ls -la *.sarif
            
            # Display summary of findings
            echo "üìä Security Scan Summary:"
            echo "JAR Dependencies:"
            trivy fs --format table target/
            echo ""
            echo "Source Code:"
            trivy fs --format table --scanners vuln,secret .
    
    # Upload SARIF files as artifacts for further analysis
    Outputs:
      Reports:
        SCA:
          Format: SARIFSCA
          IncludePaths:
            - "demo/trivy-jar-report.sarif"
            - "demo/trivy-source-report.sarif"
          SuccessCriteria:
            Vulnerabilities:
              Severity: HIGH
              Number: 0