Name: deployment-pipeline
SchemaVersion: "1.0"
Triggers:
  - Type: PUSH
    Branches:
      - main
Actions:
  Build:
    Actions:
      SCA:
        Identifier: aws/github-actions-runner@v1
        Inputs:
          Sources:
            - WorkflowSource
        Configuration:
          Steps:
            - name: Change to demo directory and run Trivy Vulnerability Scanner
              run: cd demo
            - name: Trivy Vulnerability Scanner
              uses: aquasecurity/trivy-action@0.24.0
              with:
                scan-type: fs
                ignore-unfixed: true
                format: sarif
                output: report.sarif
                security-checks: vuln,config,secret
                severity: CRITICAL,HIGH
                scan-ref: './demo'
              env:
                TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
        Outputs:
          Reports:
            SCA:
              Format: SARIFSCA
              IncludePaths:
                - report.sarif
              SuccessCriteria:
                Vulnerabilities:
                  Severity: HIGH
                  Number: 0
      Package:
        Identifier: aws/build@v1
        Inputs:
          Sources:
            - WorkflowSource
        Outputs:
          AutoDiscoverReports:
            Enabled: true
            ReportNamePrefix: build
            SuccessCriteria:
              PassRate: 100
          Artifacts:
            - Name: package
              Files:
                - "**/*"
        Configuration:
          Steps:
            - Run: cd demo && mvn verify --batch-mode --no-transfer-progress
      Synth:
        Identifier: aws/build@v1
        Inputs:
          Sources:
            - WorkflowSource
        Outputs:
          AutoDiscoverReports:
            Enabled: true
            ReportNamePrefix: synth
            IncludePaths:
              - test-reports/*
            SuccessCriteria:
              PassRate: 100
          Artifacts:
            - Name: synth
              Files:
                - cdk.out/**/*
        Configuration:
          Steps:
            - Run: cd demo && npm ci
            - Run: cd demo && npm test
            - Run: cd demo && npm run lint
            - Run: cd demo && npm run build
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_x86_64:2024_03
